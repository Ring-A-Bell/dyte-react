{"version":3,"sources":["Components/PasteBin/index.jsx","Components/LiveView/index.jsx","Editor/index.jsx","Components/FileDisp/index.jsx","FilePane/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["PasteBin","props","style","display","justifyContent","marginTop","Button","onClick","console","log","form","FormData","append","code","axios","post","then","res","err","response","data","savePaste","color","variant","LiveView","useState","renderCode","setRenderCode","useEffect","htmlCode","substring","indexOf","jsCode","cssCode","srcDoc","Editor","tabLength","setTabLength","Prism","highlightAll","json","JSON","stringify","localStorage","setItem","fileName","lang","className","onChange","e","setCode","target","value","onKeyDown","key","shiftKey","preventDefault","substr","length","indentLevel","i","handleKeyDown","spellCheck","FileDisp","script","document","createElement","type","src","body","appendChild","name","iconName","iconColor","FilePane","setFile","App","indentation","setIndentation","selectedFile","setHtmlCode","setCssCode","setJsCode","getItem","parse","Grid","container","spacing","item","xs","md","FormControl","component","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","label","checked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6ZAIe,SAASA,EAASC,GAgC7B,OACI,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAe,gBAAiBC,UAAU,OAAvE,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBA7BrB,WACIC,QAAQC,IAAI,MAEZ,IAIIC,EAAO,IAAIC,SACfD,EAAKE,OAAO,cAZH,eAaTF,EAAKE,OAAO,aAAc,SAC1BF,EAAKE,OAAO,iBAAkBX,EAAMY,MAEpCC,IAAMC,KAAK,8EACPL,GAEHM,MAAM,SAACC,GACJT,QAAQC,IAAIQ,MACb,SAACC,GACAV,QAAQC,IAAIS,EAAIC,SAASC,SAWNC,IACfC,MAAM,UACNC,QAAQ,WAHZ,kBAIA,cAACjB,EAAA,EAAD,CACIC,QAAS,aACTe,MAAM,YACNC,QAAQ,WAHZ,yB,MCpCG,SAASC,EAASvB,GAG7B,MAAoCwB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,qBAAU,WACN,IAAIf,EAEJA,EAAQZ,EAAM4B,SAAUC,UAAU,EAAE7B,EAAM4B,SAASE,QAAQ,UAAU,GACrElB,GAAQ,eAAiBZ,EAAM+B,OAAS,eACxCnB,GAAQ,cAAgBZ,EAAMgC,QAAU,eACxCpB,GAAQZ,EAAM4B,SAASC,UAAU7B,EAAM4B,SAASE,QAAQ,UAAU,GAGlEJ,EAAcd,GACdL,QAAQC,IAAII,MAIZ,gCACI,wBAAQqB,OAAQR,IAChB,cAAC1B,EAAD,CAAUa,KAAMa,O,iCCrBb,SAASS,EAAOlC,GAG3B,MAAkCwB,mBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KAyCA,OAvCAT,qBAAU,WACNU,IAAMC,eAGN,IAAMC,EAAOC,KAAKC,UAAUzC,EAAMY,MAClC8B,aAAaC,QAAb,UAAwB3C,EAAM4C,UAAYL,KAC3C,CAACvC,EAAM6C,KAAM7C,EAAM4C,SAAU5C,EAAMY,OAkClC,sBAAKkC,UAAU,iBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sBAAMA,UAAS,mBAAc9C,EAAM6C,MAAnC,SAA4C7C,EAAMY,SAEtD,0BAAUkC,UAAU,aAChBC,SAAU,SAACC,GAAOhD,EAAMiD,QAAQD,EAAEE,OAAOC,QACzCA,MAAOnD,EAAMY,KACbwC,UAAW,SAACJ,IAvCxB,SAAuBA,GACnB,IAAIG,EAAQnD,EAAMY,KAGlB,GAAW,QAARoC,EAAEK,KAAgBL,EAAEM,SASfN,EAAEM,UAAmB,OAAPN,EAAEK,MACpBL,EAAEO,iBACFnB,EAAaD,EAAU,GACvBgB,EAAQA,EAAMK,OAAO,EAAEL,EAAMM,OAAOzD,EAAM0D,aAC1CnD,QAAQC,IAAI2C,QAbiB,CAC7BH,EAAEO,iBACFnB,EAAaD,EAAU,GACvB,IAAI,IAAIwB,EAAE,EAAEA,EAAE3D,EAAM0D,YAAYC,IAC5BR,GAAS,IACb5C,QAAQC,IAAI2C,GAYhB,GAAU,SAAPH,EAAEK,IAAc,CAGf,IAFAL,EAAEO,iBACFJ,GAAS,KACDQ,EAAE,EAAEA,GAAGxB,EAAUnC,EAAM0D,YAAYC,IACvCR,GAAS,IACb5C,QAAQC,IAAI2C,GAEhBnD,EAAMiD,QAAQE,GAWaS,CAAcZ,IACjCa,WAAW,a,MCvDZ,SAASC,EAAS9D,GAS7B,OANA2B,qBAAU,WACN,IAAMoC,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAK,SACZH,EAAOI,IAAM,oDACbH,SAASI,KAAKC,YAAYN,MAG1B,sBAAKjB,UAAU,eAAf,UACI,0BAAUwB,KAAI,eAAUtE,EAAMuE,UAAYtE,MAAO,CAAC,MAAQD,EAAMwE,aAC/DxE,EAAM4C,Y,MCZJ,SAAS6B,EAASzE,GAE7B,OACI,sBAAK8C,UAAU,eAAf,UACI,qBAAKxC,QAAS,WAAON,EAAM0E,QAAQ,aAAnC,SACI,cAACZ,EAAD,CAAUS,SAAU,aAAcC,UAAW,SAAU5B,SAAU,eAErE,qBAAKtC,QAAS,WAAON,EAAM0E,QAAQ,cAAnC,SACI,cAACZ,EAAD,CAAUS,SAAU,OAAQC,UAAW,QAAS5B,SAAU,gBAE9D,qBAAKtC,QAAS,WAAON,EAAM0E,QAAQ,eAAnC,SACI,cAACZ,EAAD,CAAUS,SAAU,QAASC,UAAW,MAAO5B,SAAU,oBCR1D,SAAS+B,IAGtB,MAAsCnD,mBAAS,GAA/C,mBAAOoD,EAAP,KAAoBC,EAApB,KACA,EAAgCrD,mBAAS,YAAzC,mBAAOsD,EAAP,KAAqBJ,EAArB,KACA,EAAgClD,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBmD,EAAjB,KACA,EAA8BvD,mBAAS,IAAvC,mBAAOQ,EAAP,KAAgBgD,EAAhB,KACA,EAA4BxD,mBAAS,IAArC,mBAAOO,EAAP,KAAekD,EAAf,KAqCA,OAnCAtD,qBAAU,WAER,IAAIY,EAAOG,aAAawC,QAAQ,YAC5B/D,EAAOqB,KAAK2C,MAAM5C,GAEpB0C,EADC9D,GAGS,IAEZoB,EAAOG,aAAawC,QAAQ,aAC5B/D,EAAOqB,KAAK2C,MAAM5C,GAEhByC,EADC7D,GAGU,IAEboB,EAAOG,aAAawC,QAAQ,cAC5B/D,EAAOqB,KAAK2C,MAAM5C,GAEhBwC,EADC5D,GAGW,MACb,IAcD,qBAAK2B,UAAU,iBAAf,SACE,eAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,qBAAK3C,UAAU,eAAf,SACA,eAAC4C,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACE,cAACC,EAAA,EAAD,CAAWD,UAAU,SAArB,0BACA,eAACE,EAAA,EAAD,CAAY,aAAW,cAAcvB,KAAK,SAASnB,MAAOyB,EAAa7B,SAAU,SAACC,GAAD,OAAO6B,EAAe7B,EAAEE,OAAOC,QAAQ2C,KAAG,EAA3H,UACE,cAACC,EAAA,EAAD,CAAkB5C,MAAM,IAAI6C,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,QACtD,cAACH,EAAA,EAAD,CAAkB5C,MAAM,IAAIgD,QAAsB,GAAbvB,EAAgBoB,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,SAC/E,cAACH,EAAA,EAAD,CAAkB5C,MAAM,IAAI6C,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,kBAK5D,cAACzB,EAAD,CAAUC,QAASA,IACnB,8BA1Ba,YAAdI,EACM,cAAC5C,EAAD,CAAQwB,YAAakB,EAAa/B,KAAM,aAAcD,SAAUkC,EAAclE,KAAMmB,EAAQkB,QAASgC,IAExF,aAAdH,EACD,cAAC5C,EAAD,CAAQwB,YAAakB,EAAa/B,KAAM,MAAOD,SAAUkC,EAAclE,KAAMoB,EAASiB,QAAS+B,IAEhF,cAAdF,EACC,cAAC5C,EAAD,CAAQwB,YAAakB,EAAa/B,KAAM,OAAQD,SAAUkC,EAAclE,KAAMgB,EAAUqB,QAAS8B,SADrG,OAyBD,cAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAClE,EAAD,CAAUK,SAAUA,EAAUG,OAAQA,EAAQC,QAASA,WCzEjE,IAYeoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,SAM1BX,M","file":"static/js/main.6efa5147.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function PasteBin(props) {\r\n\r\n    const devKey='YOURKEYHERE';\r\n\r\n\r\n\r\n    function savePaste() {\r\n        console.log(\"hi\");\r\n\r\n        const header = {\r\n            //\"X-Requested-With\": \"XMLHttpRequest\"\r\n            \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n        var form = new FormData();\r\n        form.append('api_dev_key', devKey);\r\n        form.append('api_option', \"paste\");\r\n        form.append('api_paste_code', props.code);\r\n\r\n        axios.post(\"https://thingproxy.freeboard.io/fetch/https://pastebin.com/api/api_post.php\",\r\n            form\r\n            )\r\n        .then ((res) => {\r\n            console.log(res);\r\n        }, (err) => {\r\n            console.log(err.response.data);\r\n        });\r\n    }\r\n\r\n    function getPaste() {\r\n        // To-Do, incomplete\r\n    }\r\n\r\n    return (\r\n        <div style={{display:\"flex\", justifyContent:\"space-between\", marginTop:\"5px\"}}>\r\n            <Button \r\n                onClick={() => savePaste()} \r\n                color=\"primary\"\r\n                variant=\"outlined\">Save</Button>\r\n            <Button \r\n                onClick={() => getPaste()} \r\n                color=\"secondary\"\r\n                variant=\"outlined\">Retrieve</Button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PasteBin from '../PasteBin';\r\nimport './style.css';\r\n\r\nexport default function LiveView(props) {\r\n\r\n    // State to store code to be live rendered\r\n    const [renderCode, setRenderCode] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        var code;\r\n\r\n        code = (props.htmlCode).substring(0,props.htmlCode.indexOf(\"<html>\")+6);\r\n        code += \"\\n<script>\\n\" + props.jsCode + \"\\n</script>\"; // injecting Javascript into the HTML\r\n        code += \"\\n<style>\\n\" + props.cssCode + \"\\n</style>\\n\"; // injecting CSS into the HTML\r\n        code += props.htmlCode.substring(props.htmlCode.indexOf(\"<html>\")+6);\r\n\r\n        // One single file with HTMl, JS and CSS code\r\n        setRenderCode(code);\r\n        console.log(code);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <iframe srcDoc={renderCode} />\r\n            <PasteBin code={renderCode} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Prism from 'prismjs';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport './style.css';\r\nimport './prism.css';\r\n\r\nexport default function Editor(props) {\r\n\r\n    // How many spaces for each tab\r\n    const [tabLength, setTabLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n\r\n        // To store the code into the respective local storage file\r\n        const json = JSON.stringify(props.code);\r\n        localStorage.setItem(`${props.fileName}`, json);\r\n    }, [props.lang, props.fileName, props.code]); \r\n\r\n    function handleKeyDown(e) {\r\n        let value = props.code;\r\n\r\n        // Increase indentation\r\n        if(e.key===\"Tab\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            setTabLength(tabLength+1);\r\n            for(var i=0;i<props.indentLevel;i++)\r\n                value += \" \";\r\n            console.log(value);\r\n        }\r\n\r\n        // Decrease indentation\r\n        else if(e.shiftKey && e.key==\"Tab\") {\r\n            e.preventDefault();\r\n            setTabLength(tabLength-1);\r\n            value = value.substr(0,value.length-props.indentLevel);\r\n            console.log(value);\r\n        }\r\n        \r\n        // Next line with the same indentation\r\n        if(e.key==\"Enter\") {\r\n            e.preventDefault();\r\n            value += \"\\n\";\r\n            for(var i=1;i<=tabLength*props.indentLevel;i++)\r\n                value += \" \";\r\n            console.log(value);\r\n        }\r\n        props.setCode(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"code-container\">            \r\n            <pre className=\"code-output\">\r\n                <code className={`language-${props.lang}`}>{props.code}</code>\r\n            </pre>\r\n            <textarea className=\"code-input\"\r\n                onChange={(e) => {props.setCode(e.target.value)}}\r\n                value={props.code}\r\n                onKeyDown={(e) => {handleKeyDown(e)}}\r\n                spellCheck=\"false\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\n// Individual File Design (icon + text)\r\nexport default function FileDisp(props) {\r\n    \r\n    // Script for using ion icons\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.type=\"module\";\r\n        script.src = \"https://unpkg.com/ionicons@5.4.0/dist/ionicons.js\";\r\n        document.body.appendChild(script);\r\n    })\r\n    return (\r\n        <div className=\"file-details\">\r\n            <ion-icon name={`logo-${props.iconName}`} style={{'color':props.iconColor}}></ion-icon>\r\n            {props.fileName}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport FileDisp from '../Components/FileDisp';\r\nimport './style.css';\r\n\r\nexport default function FilePane(props) {\r\n\r\n    return (\r\n        <div className=\"pane-content\">\r\n            <div onClick={() => {props.setFile(\"index.js\")}}>\r\n                <FileDisp iconName={\"javascript\"} iconColor={\"yellow\"} fileName={\"index.js\"}/>\r\n            </div>\r\n            <div onClick={() => {props.setFile(\"index.css\")}}>\r\n                <FileDisp iconName={\"css3\"} iconColor={\"green\"} fileName={\"index.css\"}/>\r\n            </div>\r\n            <div onClick={() => {props.setFile(\"index.html\")}}>\r\n                <FileDisp iconName={\"html5\"} iconColor={\"red\"} fileName={\"index.html\"}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Container, FormControlLabel, Grid, RadioGroup, Radio, FormControl, FormLabel, InputLabel, Select, MenuItem, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport LiveView from './Components/LiveView';\nimport Editor from './Editor';\nimport FilePane from './FilePane';\n\nexport default function App() {\n\n  // Hooks to store states\n  const [indentation, setIndentation] = useState(4);\n  const [selectedFile, setFile] = useState(\"index.js\");\n  const [htmlCode, setHtmlCode] = useState(\"\");\n  const [cssCode, setCssCode] = useState(\"\");\n  const [jsCode, setJsCode] = useState(\"\");\n\n  useEffect(() => {\n    // Loading content from the respective file whenever it is selected\n    var json = localStorage.getItem(\"index.js\");\n    var data = JSON.parse(json);\n    if(data)\n      setJsCode(data);\n    else\n      setJsCode(\"\");\n\n    json = localStorage.getItem(\"index.css\");\n    data = JSON.parse(json);\n    if(data)\n      setCssCode(data);\n    else\n      setCssCode(\"\");\n\n    json = localStorage.getItem(\"index.html\");\n    data = JSON.parse(json);\n    if(data)\n      setHtmlCode(data);\n    else\n      setHtmlCode(\"\");\n  }, []);\n\n  function editorLang() {\n    if(selectedFile==\"index.js\")\n      return <Editor indentLevel={indentation} lang={\"javascript\"} fileName={selectedFile} code={jsCode} setCode={setJsCode}/>\n      \n    else if(selectedFile==\"index.css\")\n    return <Editor indentLevel={indentation} lang={\"css\"} fileName={selectedFile} code={cssCode} setCode={setCssCode}/>\n    \n    else if(selectedFile==\"index.html\")\n      return <Editor indentLevel={indentation} lang={\"html\"} fileName={selectedFile} code={htmlCode} setCode={setHtmlCode}/>\n  }\n\n  return (\n    <div className=\"main-container\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <div className=\"indent-check\">\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Indent Level</FormLabel>\n            <RadioGroup aria-label=\"indentation\" name=\"indent\" value={indentation} onChange={(e) => setIndentation(e.target.value)} row>\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"Two\" />\n              <FormControlLabel value=\"4\" checked={indentation==4} control={<Radio />} label=\"Four\" />\n              <FormControlLabel value=\"8\" control={<Radio />} label=\"Eight\" />\n            </RadioGroup>\n          </FormControl>\n          </div>\n          \n        <FilePane setFile={setFile}/>\n        <div>\n          {editorLang()}\n        </div>\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <LiveView htmlCode={htmlCode} jsCode={jsCode} cssCode={cssCode}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}